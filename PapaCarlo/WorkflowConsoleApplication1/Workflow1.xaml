<Activity mc:Ignorable="sap sap2010 sads" x:Class="WorkflowConsoleApplication1.Workflow1"
 xmlns="http://schemas.microsoft.com/netfx/2009/xaml/activities"
 xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
 xmlns:mca="clr-namespace:Microsoft.CSharp.Activities;assembly=System.Activities"
 xmlns:p="clr-namespace:PapaCarloDBApp;assembly=PapaCarloDBApp"
 xmlns:sads="http://schemas.microsoft.com/netfx/2010/xaml/activities/debugger"
 xmlns:sap="http://schemas.microsoft.com/netfx/2009/xaml/activities/presentation"
 xmlns:sap2010="http://schemas.microsoft.com/netfx/2010/xaml/activities/presentation"
 xmlns:scg="clr-namespace:System.Collections.Generic;assembly=mscorlib"
 xmlns:sco="clr-namespace:System.Collections.ObjectModel;assembly=mscorlib"
 xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml">
  <x:Members>
    <x:Property Name="contr" Type="InArgument(p:ContractShipment)" />
    <x:Property Name="query" Type="InArgument(p:QueryContractShipment)" />
    <x:Property Name="Id" Type="InArgument(x:Int32)" />
    <x:Property Name="oldAmount" Type="InArgument(x:Int32)" />
    <x:Property Name="storeId" Type="InArgument(x:Int32)" />
    <x:Property Name="Result" Type="OutArgument(x:Boolean)" />
    <x:Property Name="mov" Type="InArgument(x:Int32)" />
  </x:Members>
  <sap2010:ExpressionActivityEditor.ExpressionActivityEditor>C#</sap2010:ExpressionActivityEditor.ExpressionActivityEditor>
  <sap2010:WorkflowViewState.IdRef>WorkflowConsoleApplication1.Workflow1_1</sap2010:WorkflowViewState.IdRef>
  <TextExpression.NamespacesForImplementation>
    <sco:Collection x:TypeArguments="x:String">
      <x:String>System</x:String>
      <x:String>System.Collections.Generic</x:String>
      <x:String>System.Data</x:String>
      <x:String>System.Linq</x:String>
      <x:String>System.Text</x:String>
      <x:String>PapaCarloDBApp</x:String>
    </sco:Collection>
  </TextExpression.NamespacesForImplementation>
  <TextExpression.ReferencesForImplementation>
    <sco:Collection x:TypeArguments="AssemblyReference">
      <AssemblyReference>EntityFramework</AssemblyReference>
      <AssemblyReference>EntityFramework.SqlServer</AssemblyReference>
      <AssemblyReference>Microsoft.CSharp</AssemblyReference>
      <AssemblyReference>System</AssemblyReference>
      <AssemblyReference>System.Activities</AssemblyReference>
      <AssemblyReference>System.ComponentModel.DataAnnotations</AssemblyReference>
      <AssemblyReference>System.Core</AssemblyReference>
      <AssemblyReference>System.Data</AssemblyReference>
      <AssemblyReference>System.Runtime.Serialization</AssemblyReference>
      <AssemblyReference>System.ServiceModel</AssemblyReference>
      <AssemblyReference>System.ServiceModel.Activities</AssemblyReference>
      <AssemblyReference>System.Xaml</AssemblyReference>
      <AssemblyReference>System.Xml</AssemblyReference>
      <AssemblyReference>System.Xml.Linq</AssemblyReference>
      <AssemblyReference>PapaCarloDBApp</AssemblyReference>
      <AssemblyReference>mscorlib</AssemblyReference>
      <AssemblyReference>WorkflowConsoleApplication1</AssemblyReference>
    </sco:Collection>
  </TextExpression.ReferencesForImplementation>
  <Sequence sap2010:WorkflowViewState.IdRef="Sequence_1">
    <Sequence.Variables>
      <Variable x:TypeArguments="scg:List(p:ReportBalanceTable)" Name="res" />
      <Variable x:TypeArguments="x:Boolean" Name="tmp" />
    </Sequence.Variables>
    <Assign sap2010:WorkflowViewState.IdRef="Assign_3">
      <Assign.To>
        <OutArgument x:TypeArguments="scg:List(p:ReportBalanceTable)">
          <mca:CSharpReference x:TypeArguments="scg:List(p:ReportBalanceTable)">res</mca:CSharpReference>
        </OutArgument>
      </Assign.To>
      <Assign.Value>
        <InArgument x:TypeArguments="scg:List(p:ReportBalanceTable)">
          <mca:CSharpValue x:TypeArguments="scg:List(p:ReportBalanceTable)">MyUtils.querySelectReportBalanceByShip(contr, storeId)</mca:CSharpValue>
        </InArgument>
      </Assign.Value>
    </Assign>
    <If sap2010:WorkflowViewState.IdRef="If_2">
      <If.Condition>
        <InArgument x:TypeArguments="x:Boolean">
          <mca:CSharpValue x:TypeArguments="x:Boolean">res == null || res.Count == 0</mca:CSharpValue>
        </InArgument>
      </If.Condition>
      <If.Then>
        <If sap2010:WorkflowViewState.IdRef="If_1">
          <If.Condition>
            <InArgument x:TypeArguments="x:Boolean">
              <mca:CSharpValue x:TypeArguments="x:Boolean">oldAmount == 0 &amp;&amp; mov != 1</mca:CSharpValue>
            </InArgument>
          </If.Condition>
          <If.Then>
            <Assign sap2010:WorkflowViewState.IdRef="Assign_4">
              <Assign.To>
                <OutArgument x:TypeArguments="x:Boolean">
                  <mca:CSharpReference x:TypeArguments="x:Boolean">Result</mca:CSharpReference>
                </OutArgument>
              </Assign.To>
              <Assign.Value>
                <InArgument x:TypeArguments="x:Boolean">False</InArgument>
              </Assign.Value>
            </Assign>
          </If.Then>
          <If.Else>
            <Sequence sap2010:WorkflowViewState.IdRef="Sequence_5">
              <Sequence sap2010:WorkflowViewState.IdRef="Sequence_3">
                <Sequence.Variables>
                  <Variable x:TypeArguments="x:Int32" Name="gg" />
                </Sequence.Variables>
                <Assign sap2010:WorkflowViewState.IdRef="Assign_12">
                  <Assign.To>
                    <OutArgument x:TypeArguments="x:Int32">
                      <mca:CSharpReference x:TypeArguments="x:Int32">gg</mca:CSharpReference>
                    </OutArgument>
                  </Assign.To>
                  <Assign.Value>
                    <InArgument x:TypeArguments="x:Int32">
                      <mca:CSharpValue x:TypeArguments="x:Int32">MyUtils.restore(contr, oldAmount)</mca:CSharpValue>
                    </InArgument>
                  </Assign.Value>
                </Assign>
                <If sap2010:WorkflowViewState.IdRef="If_8">
                  <If.Condition>
                    <InArgument x:TypeArguments="x:Boolean">
                      <mca:CSharpValue x:TypeArguments="x:Boolean">mov != 1</mca:CSharpValue>
                    </InArgument>
                  </If.Condition>
                  <If.Then>
                    <If sap2010:WorkflowViewState.IdRef="If_3">
                      <If.Condition>
                        <InArgument x:TypeArguments="x:Boolean">
                          <mca:CSharpValue x:TypeArguments="x:Boolean">Id == -1</mca:CSharpValue>
                        </InArgument>
                      </If.Condition>
                      <If.Then>
                        <Sequence sap2010:WorkflowViewState.IdRef="Sequence_2">
                          <InvokeMethod sap2010:WorkflowViewState.IdRef="InvokeMethod_2" MethodName="queryAddContractShipment">
                            <InvokeMethod.TargetObject>
                              <InArgument x:TypeArguments="p:QueryContractShipment">
                                <mca:CSharpValue x:TypeArguments="p:QueryContractShipment">query</mca:CSharpValue>
                              </InArgument>
                            </InvokeMethod.TargetObject>
                            <InArgument x:TypeArguments="p:ContractShipment">
                              <mca:CSharpValue x:TypeArguments="p:ContractShipment">contr</mca:CSharpValue>
                            </InArgument>
                          </InvokeMethod>
                        </Sequence>
                      </If.Then>
                      <If.Else>
                        <Sequence sap2010:WorkflowViewState.IdRef="Sequence_4">
                          <Assign sap2010:WorkflowViewState.IdRef="Assign_5">
                            <Assign.To>
                              <OutArgument x:TypeArguments="x:Int32">
                                <mca:CSharpReference x:TypeArguments="x:Int32">contr.Id</mca:CSharpReference>
                              </OutArgument>
                            </Assign.To>
                            <Assign.Value>
                              <InArgument x:TypeArguments="x:Int32">
                                <mca:CSharpValue x:TypeArguments="x:Int32">Id</mca:CSharpValue>
                              </InArgument>
                            </Assign.Value>
                          </Assign>
                          <InvokeMethod sap2010:WorkflowViewState.IdRef="InvokeMethod_4" MethodName="queryUpdateContractShipment">
                            <InvokeMethod.TargetObject>
                              <InArgument x:TypeArguments="p:QueryContractShipment">
                                <mca:CSharpValue x:TypeArguments="p:QueryContractShipment">query</mca:CSharpValue>
                              </InArgument>
                            </InvokeMethod.TargetObject>
                            <InArgument x:TypeArguments="p:ContractShipment">
                              <mca:CSharpValue x:TypeArguments="p:ContractShipment">contr</mca:CSharpValue>
                            </InArgument>
                          </InvokeMethod>
                        </Sequence>
                      </If.Else>
                    </If>
                  </If.Then>
                </If>
              </Sequence>
              <Assign sap2010:WorkflowViewState.IdRef="Assign_6">
                <Assign.To>
                  <OutArgument x:TypeArguments="x:Boolean">
                    <mca:CSharpReference x:TypeArguments="x:Boolean">Result</mca:CSharpReference>
                  </OutArgument>
                </Assign.To>
                <Assign.Value>
                  <InArgument x:TypeArguments="x:Boolean">True</InArgument>
                </Assign.Value>
              </Assign>
            </Sequence>
          </If.Else>
        </If>
      </If.Then>
      <If.Else>
        <Sequence sap2010:WorkflowViewState.IdRef="Sequence_9">
          <Assign sap2010:WorkflowViewState.IdRef="Assign_7">
            <Assign.To>
              <OutArgument x:TypeArguments="x:Int32">
                <mca:CSharpReference x:TypeArguments="x:Int32">res[0].reportBalance.Amount</mca:CSharpReference>
              </OutArgument>
            </Assign.To>
            <Assign.Value>
              <InArgument x:TypeArguments="x:Int32">
                <mca:CSharpValue x:TypeArguments="x:Int32">res[0].reportBalance.Amount - (contr.Amount - oldAmount)</mca:CSharpValue>
              </InArgument>
            </Assign.Value>
          </Assign>
          <If sap2010:WorkflowViewState.IdRef="If_7">
            <If.Condition>
              <InArgument x:TypeArguments="x:Boolean">
                <mca:CSharpValue x:TypeArguments="x:Boolean">res[0].reportBalance.Amount &lt; 0</mca:CSharpValue>
              </InArgument>
            </If.Condition>
            <If.Then>
              <Assign sap2010:WorkflowViewState.IdRef="Assign_8">
                <Assign.To>
                  <OutArgument x:TypeArguments="x:Boolean">
                    <mca:CSharpReference x:TypeArguments="x:Boolean">Result</mca:CSharpReference>
                  </OutArgument>
                </Assign.To>
                <Assign.Value>
                  <InArgument x:TypeArguments="x:Boolean">False</InArgument>
                </Assign.Value>
              </Assign>
            </If.Then>
            <If.Else>
              <Sequence sap2010:WorkflowViewState.IdRef="Sequence_10">
                <Sequence sap2010:WorkflowViewState.IdRef="Sequence_8">
                  <If sap2010:WorkflowViewState.IdRef="If_9">
                    <If.Condition>
                      <InArgument x:TypeArguments="x:Boolean">
                        <mca:CSharpValue x:TypeArguments="x:Boolean">mov != 1</mca:CSharpValue>
                      </InArgument>
                    </If.Condition>
                    <If.Then>
                      <If sap2010:WorkflowViewState.IdRef="If_5">
                        <If.Condition>
                          <InArgument x:TypeArguments="x:Boolean">
                            <mca:CSharpValue x:TypeArguments="x:Boolean">Id == -1</mca:CSharpValue>
                          </InArgument>
                        </If.Condition>
                        <If.Then>
                          <Sequence sap2010:WorkflowViewState.IdRef="Sequence_6">
                            <InvokeMethod sap2010:WorkflowViewState.IdRef="InvokeMethod_5" MethodName="queryAddContractShipment">
                              <InvokeMethod.TargetObject>
                                <InArgument x:TypeArguments="p:QueryContractShipment">
                                  <mca:CSharpValue x:TypeArguments="p:QueryContractShipment">query</mca:CSharpValue>
                                </InArgument>
                              </InvokeMethod.TargetObject>
                              <InArgument x:TypeArguments="p:ContractShipment">
                                <mca:CSharpValue x:TypeArguments="p:ContractShipment">contr</mca:CSharpValue>
                              </InArgument>
                            </InvokeMethod>
                          </Sequence>
                        </If.Then>
                        <If.Else>
                          <Sequence sap2010:WorkflowViewState.IdRef="Sequence_7">
                            <Assign sap2010:WorkflowViewState.IdRef="Assign_9">
                              <Assign.To>
                                <OutArgument x:TypeArguments="x:Int32">
                                  <mca:CSharpReference x:TypeArguments="x:Int32">contr.Id</mca:CSharpReference>
                                </OutArgument>
                              </Assign.To>
                              <Assign.Value>
                                <InArgument x:TypeArguments="x:Int32">
                                  <mca:CSharpValue x:TypeArguments="x:Int32">Id</mca:CSharpValue>
                                </InArgument>
                              </Assign.Value>
                            </Assign>
                            <InvokeMethod sap2010:WorkflowViewState.IdRef="InvokeMethod_6" MethodName="queryUpdateContractShipment">
                              <InvokeMethod.TargetObject>
                                <InArgument x:TypeArguments="p:QueryContractShipment">
                                  <mca:CSharpValue x:TypeArguments="p:QueryContractShipment">query</mca:CSharpValue>
                                </InArgument>
                              </InvokeMethod.TargetObject>
                              <InArgument x:TypeArguments="p:ContractShipment">
                                <mca:CSharpValue x:TypeArguments="p:ContractShipment">contr</mca:CSharpValue>
                              </InArgument>
                            </InvokeMethod>
                          </Sequence>
                        </If.Else>
                      </If>
                    </If.Then>
                  </If>
                  <If sap2010:WorkflowViewState.IdRef="If_6">
                    <If.Condition>
                      <InArgument x:TypeArguments="x:Boolean">
                        <mca:CSharpValue x:TypeArguments="x:Boolean">res[0].reportBalance.Amount &gt; 0</mca:CSharpValue>
                      </InArgument>
                    </If.Condition>
                    <If.Then>
                      <Assign sap2010:WorkflowViewState.IdRef="Assign_10">
                        <Assign.To>
                          <OutArgument x:TypeArguments="x:Boolean">
                            <mca:CSharpReference x:TypeArguments="x:Boolean">tmp</mca:CSharpReference>
                          </OutArgument>
                        </Assign.To>
                        <Assign.Value>
                          <InArgument x:TypeArguments="x:Boolean">
                            <mca:CSharpValue x:TypeArguments="x:Boolean">MyUtils.queryUpdateReportBalance(res[0].reportBalance)</mca:CSharpValue>
                          </InArgument>
                        </Assign.Value>
                      </Assign>
                    </If.Then>
                    <If.Else>
                      <Assign sap2010:WorkflowViewState.IdRef="Assign_11">
                        <Assign.To>
                          <OutArgument x:TypeArguments="x:Boolean">
                            <mca:CSharpReference x:TypeArguments="x:Boolean">tmp</mca:CSharpReference>
                          </OutArgument>
                        </Assign.To>
                        <Assign.Value>
                          <InArgument x:TypeArguments="x:Boolean">
                            <mca:CSharpValue x:TypeArguments="x:Boolean">new QueryReports().queryDeleteReportBalance(res[0].reportBalance.Id)</mca:CSharpValue>
                          </InArgument>
                        </Assign.Value>
                      </Assign>
                    </If.Else>
                  </If>
                </Sequence>
                <Assign sap2010:WorkflowViewState.IdRef="Assign_13">
                  <Assign.To>
                    <OutArgument x:TypeArguments="x:Boolean">
                      <mca:CSharpReference x:TypeArguments="x:Boolean">Result</mca:CSharpReference>
                    </OutArgument>
                  </Assign.To>
                  <Assign.Value>
                    <InArgument x:TypeArguments="x:Boolean">True</InArgument>
                  </Assign.Value>
                </Assign>
              </Sequence>
            </If.Else>
          </If>
        </Sequence>
      </If.Else>
    </If>
    <sads:DebugSymbol.Symbol>d2dEOlxQcm9nXHRlbXBcUGFwYUNhcmxvLW1hc3RlciAoMSlcUGFwYUNhcmxvLW1hc3RlclxQYXBhQ2FybG9cV29ya2Zsb3dDb25zb2xlQXBwbGljYXRpb24xXFdvcmtmbG93MS54YW1sRzYDyQIOAgEBOwVGDgMB7wJHBccCCgIBAkMLQ5UBAwH6Aj4LPmoDAfACSgtKZwIBA04JtwEOAwHUAboBCcUCFAIBDVEPUXADAdUBVQ1eFgMB4wJhDbUBGAMB3wG7AQvGARQDAb8BxwELxAIQAgEOXDlcPgMB7gJYE1hgAwHkAmIPqgEaAwHsAasBD7QBGAMB4AHDARHDAYYBAwHKAb4BEb4BcQMBwAHKARHKAXICAQ/OAQ/XARgDAbMB2gEPwgIaAgEZZhFxGgMBzAJyEakBFgMB7QGyATuyAT8DAesBrgEVrgFiAwHhAdUBO9UBQAMBvgHRARXRAWIDAbQB2wERtwIcAgEmuAIRwQIaAgEabhdudQMB2AJpF2leAwHNAnUXdV4DAe4BeRWnARoDAfkB3AETkwIYAgFclAITtgIYAgEnvwI9vwJBAgEluwIXuwJkAgEbfBt8YgMB+gGAARmLASQDAbQCjgEZpQEkAwGFAt8BGd8BYAIBXeMBF5ECHAIBZ5cCGZcCegIBKJsCF6YCIAIBR6kCF7QCIAIBMoEBG4oBKgMBtQKPARuaASQDAZ0CmwEbpAEqAwGGAuYBHeYBZAIBaOoBG/UBJgMBnQH4ARuPAiYCAXKjAh2jApIBAgFSngIdngJnAgFIsQIdsQKgAQIBPawCHawCZwIBM4gBH4gBbAMBwQKEASGEAXMDAbYClwEhlwFgAwGpApIBIZIBbgMBngKiAR+iAWwDAZICngEhngFzAwGHAusBHfQBLAMBngH5AR2EAiYDAYgBhQIdjgIsAgFz8gEh8gFuAwGpAe4BI+4BdQMBnwGBAiOBAmIDAZMB/AEj/AFwAwGJAYwCIYwCbgIBfogCI4gCdQIBdA==</sads:DebugSymbol.Symbol>
  </Sequence>
  <sap2010:WorkflowViewState.ViewStateManager>
    <sap2010:ViewStateManager>
      <sap2010:ViewStateData Id="Assign_3" sap:VirtualizedContainerService.HintSize="1979.2,62.4" />
      <sap2010:ViewStateData Id="Assign_4" sap:VirtualizedContainerService.HintSize="243.2,62.4" />
      <sap2010:ViewStateData Id="Assign_12" sap:VirtualizedContainerService.HintSize="654.4,62.4" />
      <sap2010:ViewStateData Id="InvokeMethod_2" sap:VirtualizedContainerService.HintSize="217.6,131.2" />
      <sap2010:ViewStateData Id="Sequence_2" sap:VirtualizedContainerService.HintSize="240,256">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="Assign_5" sap:VirtualizedContainerService.HintSize="243.2,62.4" />
      <sap2010:ViewStateData Id="InvokeMethod_4" sap:VirtualizedContainerService.HintSize="243.2,131.2" />
      <sap2010:ViewStateData Id="Sequence_4" sap:VirtualizedContainerService.HintSize="265.6,358.4">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="If_3" sap:VirtualizedContainerService.HintSize="529.6,510.4" />
      <sap2010:ViewStateData Id="If_8" sap:VirtualizedContainerService.HintSize="654.4,662.4" />
      <sap2010:ViewStateData Id="Sequence_3" sap:VirtualizedContainerService.HintSize="676.8,889.6">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="Assign_6" sap:VirtualizedContainerService.HintSize="676.8,62.4" />
      <sap2010:ViewStateData Id="Sequence_5" sap:VirtualizedContainerService.HintSize="699.2,1116.8">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="If_1" sap:VirtualizedContainerService.HintSize="966.4,1268.8" />
      <sap2010:ViewStateData Id="Assign_7" sap:VirtualizedContainerService.HintSize="966.4,62.4" />
      <sap2010:ViewStateData Id="Assign_8" sap:VirtualizedContainerService.HintSize="243.2,62.4" />
      <sap2010:ViewStateData Id="InvokeMethod_5" sap:VirtualizedContainerService.HintSize="217.6,131.2" />
      <sap2010:ViewStateData Id="Sequence_6" sap:VirtualizedContainerService.HintSize="240,256">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="Assign_9" sap:VirtualizedContainerService.HintSize="243.2,62.4" />
      <sap2010:ViewStateData Id="InvokeMethod_6" sap:VirtualizedContainerService.HintSize="243.2,131.2" />
      <sap2010:ViewStateData Id="Sequence_7" sap:VirtualizedContainerService.HintSize="265.6,358.4">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="If_5" sap:VirtualizedContainerService.HintSize="529.6,510.4" />
      <sap2010:ViewStateData Id="If_9" sap:VirtualizedContainerService.HintSize="654.4,662.4" />
      <sap2010:ViewStateData Id="Assign_10" sap:VirtualizedContainerService.HintSize="243.2,62.4" />
      <sap2010:ViewStateData Id="Assign_11" sap:VirtualizedContainerService.HintSize="243.2,62.4" />
      <sap2010:ViewStateData Id="If_6" sap:VirtualizedContainerService.HintSize="654.4,214.4" />
      <sap2010:ViewStateData Id="Sequence_8" sap:VirtualizedContainerService.HintSize="676.8,1041.6">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="Assign_13" sap:VirtualizedContainerService.HintSize="676.8,62.4" />
      <sap2010:ViewStateData Id="Sequence_10" sap:VirtualizedContainerService.HintSize="699.2,1268.8">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="If_7" sap:VirtualizedContainerService.HintSize="966.4,1420.8" />
      <sap2010:ViewStateData Id="Sequence_9" sap:VirtualizedContainerService.HintSize="988.8,1648">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="If_2" sap:VirtualizedContainerService.HintSize="1979.2,1800" />
      <sap2010:ViewStateData Id="Sequence_1" sap:VirtualizedContainerService.HintSize="2001.6,2027.2">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="WorkflowConsoleApplication1.Workflow1_1" sap:VirtualizedContainerService.HintSize="2041.6,2107.2" />
    </sap2010:ViewStateManager>
  </sap2010:WorkflowViewState.ViewStateManager>
</Activity>